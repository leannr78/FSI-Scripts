/*	*	*	*	*	*	*	*	
*----------------------------------------------------------------------------------------------	
*Script Name:  ADT_STAR_IN_MOD_OBJ			
*----------------------------------------------------------------------------------------------	
*AUTHOR:  C08495 - MIKE PATRICK				
*DOMAIN:   PROD						
*CREATION DATE:  10/09/2014 					
*LIBRARY OBJECT: OEOCFADTADT			
*----------------------------------------------------------------------------------------------	
**  MOD		DATE		BY		COMMENT	
** --------------------------------------------------------------------------------------------	
**  000		09OCT2014	C08495		repurposing existing object name
**  001         111715          IH6582          commenting out existing MSH;14 logic and 
**                                              replacing it with a new if statement below it								
*								
*	*	*	*	*	*	*	*	
*/

EXECUTE OENCPM_MSGLOG ( BUILD("Beginning ADT_STAR_IN_MOD_OBJ",char(0)))

; populating MSH-14 with guarantor last name

EXECUTE OENCPM_MSGLOG ( BUILD("Beginning ADT_STAR_IN_MOD_OBJ",char(0)))
EXECUTE OENCPM_MSGLOG ( BUILD("GT1 size = ",size(oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1,5),char(0)))

;001+
/***
if (size(oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1,5) > 0)
     EXECUTE OENCPM_MSGLOG ( BUILD("GT1 name = ",
          oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->guar_name [1]->last_name,char(0)))
     if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->guar_name [1]->last_name > "")
EXECUTE OENCPM_MSGLOG ( BUILD("Use guarantor name",char(0)))
          Set oen_reply->CONTROL_GROUP [1]->MSH [1]->continuation_ptr = 
               oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->guar_name [1]->last_name
     endif
elseif (oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_name [1]->last_name > "")
EXECUTE OENCPM_MSGLOG ( BUILD("Use patient name",char(0)))
          Set oen_reply->CONTROL_GROUP [1]->MSH [1]->continuation_ptr = 
               oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_name [1]->last_name 
else
     Set oen_reply->CONTROL_GROUP [1]->MSH [1]->continuation_ptr = 
          "MSH14"
endif
***/

if (oen_reply->CONTROL_GROUP [1]->MSH [1]->continuation_ptr = "")
   set oen_reply->CONTROL_GROUP [1]->MSH [1]->continuation_ptr = "MSH14"
endif
;001-


/* BEGIN - Add building of CNMC for all ADT transaction's PV1;3.7 - rs4987 */

; this section is to set the contributor system for QuickReg messages looped back in
EXECUTE OENCPM_MSGLOG ( BUILD("sending_facility = ",oen_reply->CONTROL_GROUP [1]->MSH [1]->sending_application,char(0)))
if (oen_reply->CONTROL_GROUP [1]->MSH [1]->sending_application  = "CERNADT")
EXECUTE OENCPM_MSGLOG ( BUILD("CERNADT, checking for TEMP_MRN",char(0)))
   if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->alternate_pat_id [1]->pat_id = "")
EXECUTE OENCPM_MSGLOG ( BUILD("no TEMP_MRN, use HNAREG",char(0)))
      Set oen_reply->CONTROL_GROUP [1]->MSH [1]->sending_application = "HNAREG"
   else
      Set oen_reply->CONTROL_GROUP [1]->MSH [1]->sending_application = "QUICK_REG"
EXECUTE OENCPM_MSGLOG ( BUILD("found TEMP_MRN, use QUICKREG",char(0)))
   endif
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->alt_visit_id [1]->pat_id = 
       oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr->pat_id
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr->pat_id = ""
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->visit_nbr->assign_fac_id = ""
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_id_int [1]->assign_fac_id = ""
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_account_nbr->assign_fac_id = ""
   Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->assigned_pat_loc->building = "CNMC"
if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->dschg_dt_tm > ""
    and
    oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->assigned_pat_loc->nurse_unit = ""
    and 
    oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->assigned_pat_loc->facility_id = "")
    set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->assigned_pat_loc->building = ""
endif
EXECUTE OENCPM_MSGLOG ( BUILD("SKIPPING TO END OF SCRIPT",char(0)))
   go to end_script
endif     ;     sending_facility
; end of QuickReg section

IF (oen_reply->CONTROL_GROUP [1]->MSH [1]->message_type->messg_type = "ADT")
   Set PAT_GRP_SIZE = size(oen_reply->PERSON_GROUP [1]->PAT_GROUP, 5)
   if (pat_grp_size > 1)
      EXECUTE OENCPM_MSGLOG ( BUILD("**********     WARNING *** PAT_GRP_Size > 1...",PAT_GRP_SIZE,"...**********",char(0)))
   endif
   FOR (x = 1 to PAT_GRP_SIZE)
;EXECUTE OENCPM_MSGLOG ( BUILD("tmp fin-----> ",
;oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [1]->alt_visit_id [1]->pat_id ,char(0)))  
     Set PV1_SIZE = size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1, 5)
     if (pv1_size > 1)
        EXECUTE OENCPM_MSGLOG ( BUILD("**********     WARNING *** PV1 Size > 1...",PV1_SIZE,"...**********",char(0)))
     endif
      IF (PV1_SIZE > 0)
         FOR (y = 1 to PV1_SIZE)
            Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [y]->assigned_pat_loc->building = "CNMC"
            if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [y]->dschg_dt_tm > ""
              and
              oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [y]->assigned_pat_loc->nurse_unit = ""
              and 
              oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [y]->assigned_pat_loc->facility_id = "")
              set oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [y]->assigned_pat_loc->building = ""
           endif
            if (substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [y]->alt_visit_id [1]->pat_id) = char(34))
               set oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [y]->alt_visit_id [1]->pat_id = ""
            endif
            if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [y]->alt_visit_id [1]->pat_id != "")
               set tmp_fn = oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV1 [1]->alt_visit_id [1]->pat_id 
               Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->alt_visit_id [1]->pat_id = tmp_fn
  ;EXECUTE OENCPM_MSGLOG ( BUILD("tmp fin in loop----> ",tmp_fn,char(0)))   
            endif
         ENDFOR     ;     y
      ENDIF     ;     PV1 size
; prevents STAR from changing est_arrival_dt_tm
;         if (size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV2,5) >0)
;            set oen_reply->PERSON_GROUP [1]->PAT_GROUP [x]->PV2 [1]->exp_admit_dt = ""
;         endif
   ENDFOR     ;     x
ENDIF     ;     ADT

/* END - Add building of CNMC for all ADT transaction's PV1;3.7 - rs4987 */

declare MRN = vc
declare dbMRN = f8
declare amb = vc
declare reltn_cd = f8
declare reltn = vc
declare fin = vc
declare lname = vc
declare fname = vc
declare mname = vc

set pgsize = size(oen_reply->PERSON_GROUP [1]->PAT_GROUP,5)

for (p=1 to pgsize ) ;jv 10/19

if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->assign_fac_id > "")
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->assign_fac_id = null
endif
if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->id_type > "")
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->id_type = null
endif
if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->patient_class = "P")
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->account_stat = "P"
endif
;if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->assign_fac_id > "")
;     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->assign_fac_id = null
;endif
if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->id_type > "")
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->id_type = null
endif
if (substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ssn_nbr) = char(34))
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ssn_nbr = ""
endif
if (substring(1,1,oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->social_sec_nbr ) = char(34))
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->social_sec_nbr  = ""
endif
;  military status, PID-27, Reason for no SSN  
;if (substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->vet_mil_stat->identifier) = char(34))
;     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->vet_mil_stat->identifier = ""
;endif
if (substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->pat_id ) = char(34))
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->pat_id = ""
endif
if (substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->visit_nbr->pat_id) = char(34))
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->visit_nbr->pat_id = ""
endif
;if (substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->pat_id ) = char(34))
;     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->pat_id = ""
;endif
if (size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ethnic_grp) > 1
     and substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ethnic_grp) != "^")
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ethnic_grp = 
          substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ethnic_grp)
else
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ethnic_grp = ""
endif     ;     ethnic_grp
for (pt_add = 1 to size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address,5))
     if (substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address [1]->county) = char(34))
          Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address [pt_add]->county = ""
     endif
endfor     ;     pt_add
while (findstring("-",oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address [1]->zip_code,1) != 0)
   set hy_pos = findstring("-",oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address [1]->zip_code,1)
   set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address [1]->zip_code = 
      build(substring(1,hy_pos-1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address [1]->zip_code),
      substring(hy_pos+1,size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address [1]->zip_code) -
      hy_pos,oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_address [1]->zip_code))
endwhile
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_ext->check_digit = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_ext->check_digit_scheme = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_ext->assign_fac_id = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_ext->id_type = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_ext->act_assign_fac_id = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_int [1]->check_digit = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_int [1]->check_digit_scheme = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_int [1]->assign_fac_id = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_int [1]->id_type = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->patient_id_int [1]->act_assign_fac_id = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->check_digit = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->check_digit_scheme = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->assign_fac_id = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->id_type = ""
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->alternate_pat_id [1]->act_assign_fac_id = ""

  Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->check_digit = ""
  Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->check_digit_scheme = ""
  Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->assign_fac_id = ""
  Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->id_type = ""
  Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PV1 [1]->alt_visit_id [1]->act_assign_fac_id = ""


     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->nbr->check_digit = ""
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->nbr->check_digit_scheme = ""
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->nbr->assign_auth_id = ""
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->nbr->id_type = ""
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->nbr->assign_fac_id = ""
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->guar_job_code->job_code = 
          oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->guar_marital_status 
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->guar_marital_status = ""
; this section strips superfluos info from race fields
Set race_size = size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->race, 5)
if (race_size > 0)
   for (race = 1 to race_size)
      Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->race [1]->text = ""
      Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->race [1]->coding_system = ""
      Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->race [1]->alt_identifier = ""
      Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->race [1]->alt_text = ""
      Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->race [1]->alt_coding_system = ""
   endfor     ;     race
endif     ;     race_size

; this section strips hyphens from the SSN
if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ssn_nbr > "")
   set social = oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ssn_nbr 
   while (findstring("-",social,1) != 0)
      set hy_pos = findstring("-",social,1)
      set social = build(substring(1,hy_pos-1,social),substring(hy_pos+1,size(social)-hy_pos,social))
   endwhile
Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [p]->PID [1]->ssn_nbr = social
endif     ;;;;;     ssn_nbr

endfor; pidsize jv 10/19



if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->social_sec_nbr > "")
   set social = oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->social_sec_nbr 
   while (findstring("-",social,1) != 0)
      set hy_pos = findstring("-",social,1)
      set social = build(substring(1,hy_pos-1,social),substring(hy_pos+1,size(social)-hy_pos,social))
   endwhile
Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->social_sec_nbr = social
endif     ;;;;;     ssn_nbr

;************************************************    IN1 customizations     **************************************************

Set in_size = size(oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP,5)
Set fin = oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PID [1]->patient_account_nbr->pat_id 
if (in_size > 0)
Set seq = 0
Set quotes = build(char(34),char(34))
     for (a = 1 to in_size)
; removing hyphens for SSN
          if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN2 [1]->insureds_SSN > "")
               set social = oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN2 [1]->insureds_SSN
               while (findstring("-",social,1) != 0)
                    set hy_pos = findstring("-",social,1)
                    set social = build(substring(1,hy_pos-1,social),substring(hy_pos+1,size(social)-hy_pos,social))
               endwhile
               Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN2 [1]->insureds_SSN = social
          endif     ;;;;;     ssn_nbr
; moving IN1 name to name_on_card fields
if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->first_name > "" and
          oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->first_name != quotes)
     Set seq = seq + 1
     Set obs_id = build("NOC",a,"F",char(0))
     Set stat = alterlist(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX,seq)
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->set_id = cnvtstring(seq)
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->value_type = "TX"
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->observation_id->identifier = obs_id
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->observation_value [1]->value_1 = 
          oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->first_name 
endif
if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->middle_name > "" and
          oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->middle_name != quotes)
     Set seq = seq + 1
     Set obs_id = build("NOC",a,"M",char(0))
     Set stat = alterlist(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX,seq)
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->set_id = cnvtstring(seq)
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->value_type = "TX"
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->observation_id->identifier = obs_id
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->observation_value [1]->value_1 = 
          oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->middle_name
endif
if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->last_name > "" and
          oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->last_name != quotes)
     Set seq = seq + 1
     Set obs_id = build("NOC",a,"L",char(0))
     Set stat = alterlist(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX,seq)
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->set_id = cnvtstring(seq)
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->value_type = "TX"
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->observation_id->identifier = obs_id
     Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->OBX [seq]->observation_value [1]->value_1 = 
          oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->last_name
endif
          if ( oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN2 [1]->pat_reltn_to_insured->identifier > "")
          Set reltn = oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN2 [1]->pat_reltn_to_insured->identifier
EXECUTE OENCPM_MSGLOG ( BUILD("IN2-72.1, reltn = ",reltn,char(0)))
          endif
          if (reltn > "")
          set reltn = build("IN",reltn)
          select into "nl:"
            cva.code_value
          from code_value_alias cva
            where cva.alias = reltn
            and cva.code_set = 40
            and cva.contributor_source_cd = 3146571.00
          detail
            reltn_cd = cva.code_value
          with nocounter
EXECUTE OENCPM_MSGLOG ( BUILD("Reltn_cd = ",reltn_cd,char(0)))
               if (reltn_cd > 0)
                    select into "nl:"
                      p.name_last,
                      p.name_first,
                      p.name_middle
                    from encntr_plan_reltn epr,
                      person p,
                      encntr_alias ea,
                      encntr_person_reltn eperson
                    plan ea
                      where ea.alias = fin
                      and   ea.active_ind = 1
                      and   ea.active_status_cd = 188
                      and   ea.end_effective_dt_tm > cnvtdatetime(curdate,curtime3)
                    join epr
                      where epr.encntr_id = ea.encntr_id
                      and   epr.priority_seq = a ; 1 ; from IN1-1 or IN_GROUP count
                      and   epr.active_ind = 1 ; literal
                      and   epr.active_status_cd = 188 ; literal
                      and   epr.end_effective_dt_tm > cnvtdatetime(curdate,curtime3) ; literal
                    join eperson
                      where eperson.related_person_id = epr.person_id
                      and   eperson.PERSON_RELTN_TYPE_CD = 1158
                      AND   eperson.RELATED_PERSON_RELTN_CD = reltn_cd
                      AND   eperson.ENCNTR_ID = epr.encntr_id
                      and   eperson.end_effective_dt_tm > cnvtdatetime(curdate,curtime3)
                    join p
                      where p.person_id = epr.person_id
                    detail
                      lname = p.name_last
                      fname = p.name_first
                      mname = p.name_middle
                    with nocounter
EXECUTE OENCPM_MSGLOG ( BUILD("Patient name = ", lname, "^", fname, "^", mname ,char(0)))
               endif     ;     reltn_cd > 0
          endif     ;     reltn > ""
          if (lname>"")
               Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->last_name = lname
          endif
          if (fname>"")
                    Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->first_name = fname
          endif
          if (mname>"")
                    Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->name_of_insured [1]->middle_name = mname
          endif
     endfor     ;     a
endif     ;     in_size > 0
set nk_size = size(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->NK1,5)
if (nk_size > 0)
     for (e = 1 to nk_size)
          if (substring(1,1,oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->NK1 [e]->nk_sex) = char(34))
               Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->NK1 [e]->nk_sex = ""
          endif      ;      nk_sex
          if (oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->NK1 [e]->relationship->identifier > "")
               Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->NK1 [e]->relationship->identifier = 
                    concat("NK",oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->NK1 [e]->relationship->identifier) 
          endif     ;     identifier
     endfor     ;     e
endif     ;     nk_size

if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->relationship > "")
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->relationship = 
          concat("GT",oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->GT1 [1]->relationship)
endif     ;     relationship

   ;;;;;;   this section is to build the alias for the health plan
   set in_size = size(oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP ,5)
   for (a=1 to in_size)
      set plan_in = oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1[1]->ins_plan->identifier
      set ins_in = oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1[1]->ins_co_id
      set plan_out = build(ins_in,plan_in,char(0))
      Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1[1]->ins_plan->identifier = plan_out
      if (trim(plan_out) in ("299001","300011","399000","399090","499001","507033","599000","416014"))
         set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->ins_co_address->types  = "OTHER"     ;     IN1-5.7
      EXECUTE OENCPM_MSGLOG (build("OTHER health plan for plan = ", plan_out, char(0)))
      endif     ;     plan_out in ...
      EXECUTE OENCPM_MSGLOG (build("plan_in = ", plan_in, "ins_in = ", ins_in, "plan_out = ", plan_out, char(0)))
      EXECUTE OENCPM_MSGLOG (build(oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [a]->IN1->ins_plan->identifier,char(0)))
   endfor

    ;;;;;     this section is to build the location alias
set in_unit = trim(oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->assigned_pat_loc->nurse_unit)

;jv9/15/2015 - cloverleaf is 'blanking' out locations purposly on some discharges msgs
;this is causing the new ambulatory orgs to be switched back to child nat. org
;copy the PV2 facility alias back to PV1 for outpatient discharges only
if (in_unit = "" and oen_reply->CONTROL_GROUP [1]->MSH [1]->message_type->messg_trigger  in ("A03","A08") and
oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->patient_class in ("O","R","P"))
	
set in_unit =  BACKUP_LOC->NU_LOC 
	EXECUTE OENCPM_MSGLOG (build("backup loc= ",  BACKUP_LOC->NU_LOC, char(0)))
endif


if (in_unit != "")
     set clinic = build(in_unit,"^~",in_unit,"^~",in_unit)
     select into "nl:"
       cva.alias
     from code_value_alias cva,
       code_value cv
     plan cva
     where cva.alias = clinic
       and cva.code_set = 220
       and cva.contributor_source_cd = 3146571.00     
     join cv
     where cv.code_value = cva.code_value
       and   cv.active_ind = 1
       and   cv.active_type_cd = 188
       and   cv.data_status_cd = 25
       and   cv.end_effective_dt_tm > cnvtdatetime(curdate,curtime3)
     detail
       amb = cva.alias
     with nocounter
     if (amb > "!")
          Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->assigned_pat_loc->nurse_unit = in_unit
          Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->assigned_pat_loc->facility_id = in_unit
          Set oen_reply->PERSON_GROUP [1]->PAT_GROUP [1]->PV1 [1]->assigned_pat_loc->building = in_unit
;   line added to assign correct facility
          Set oen_reply->CONTROL_GROUP [1]->MSH [1]->sending_facility = in_unit
     endif     ;     amb > "!"
endif     ;     in_unit != ""
     ;;;;;     this section is to copy IN1-36 to IN2-61 for self relationship
Set in_size = size(oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP ,5)
if (in_size > 0)
     for (d = 1 to in_size)
EXECUTE OENCPM_MSGLOG ( BUILD(d, " Subscribers relation = ",
oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->pat_reltn_to_insured->identifier,char(0)))
if (substring(1,1,oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->insureds_SSN ) = char(34))
     Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->insureds_SSN = ""
endif
;       Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->champus_id_nbr = ""
        if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->pat_reltn_to_insured->identifier > "")
             Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->pat_reltn_to_insured->identifier = 
          build("IN",oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->pat_reltn_to_insured->identifier,char(0))
        endif     ;     reltn> ""
       if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->pat_reltn_to_insured->identifier = "IN1")
EXECUTE OENCPM_MSGLOG ( BUILD("relationship is SELF",char(0)))
          if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN1->policy_nbr > "")
               Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->patient_member_nbr->pat_id = 
                    oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN1->policy_nbr 
;               Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN1->policy_nbr = ""
          endif      ;      policy_nbr
       else
EXECUTE OENCPM_MSGLOG ( BUILD("relationship is NOT self",char(0)))
        endif     ;     = "1"
if (substring(1,1,oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->insureds_emp_org->org_name) = char(34))
             Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN2 [1]->insureds_emp_org->org_name = ""
          endif
;EXECUTE OENCPM_MSGLOG ( BUILD("Plan end effective date = ", 
;     oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN1->plan_exp_date,char(0)))
;          if (oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN1->plan_exp_date > "")
;EXECUTE OENCPM_MSGLOG ( BUILD("Setting plan end effective date = ",char(34),char(34),char(0))) 
;             Set oen_reply->PERSON_GROUP [1]->FIN_GROUP [1]->INS_GROUP [d]->IN1->plan_exp_date = ""
;          endif

     endfor     ;     d
endif      ;      in_size
;ENDIF     ;     A28,A31     ;     moving to ESI comm server scripting

# end_script